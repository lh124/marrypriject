<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.PhotoCollegeDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,name as name ,school_id as schoolId ,info as info ,logo as logo ,music as music ,vedio as vedio ,gmt_create as gmtCreate ,gmt_modified as gmtModified 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,name ,school_id ,info ,logo ,music ,vedio ,gmt_create ,gmt_modified 		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.PhotoCollegeEntity" id="photoCollegeMap">
		        <result property="id" column="id"/>
		        <result property="name" column="name"/>
		        <result property="schoolId" column="school_id"/>
		        <result property="info" column="info"/>
		        <result property="logo" column="logo"/>
		        <result property="music" column="music"/>
		        <result property="vedio" column="vedio"/>
		        <result property="gmtCreate" column="gmt_create"/>
		        <result property="gmtModified" column="gmt_modified"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.PhotoCollegeEntity">
		select <include refid="allColumns"></include> from photo_college where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.PhotoCollegeEntity">
		select <include refid="allColumns"></include> from photo_college 
		<if test="schoolId != null ">
			where school_id = #{schoolId} 
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from photo_college  
		<if test="schoolId != null ">
			where school_id = #{schoolId} 
		</if>
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.PhotoCollegeEntity" useGeneratedKeys="true" keyProperty="id">
		insert into photo_college
		(
			`name`, 
			`school_id`, 
			`info`, 
			`logo`, 
			`music`, 
			`vedio`, 
			`gmt_create`, 
			`gmt_modified`
		)
		values
		(
			#{name}, 
			#{schoolId}, 
			#{info}, 
			#{logo}, 
			#{music}, 
			#{vedio}, 
			#{gmtCreate}, 
			#{gmtModified}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.PhotoCollegeEntity">
		update photo_college 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="schoolId != null">`school_id` = #{schoolId}, </if>
			<if test="info != null">`info` = #{info}, </if>
			<if test="logo != null">`logo` = #{logo}, </if>
			<if test="music != null">`music` = #{music}, </if>
			<if test="vedio != null">`vedio` = #{vedio}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from photo_college where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from photo_college where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>