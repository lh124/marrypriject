<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.PhotoUserClassDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,class_id as classId ,front_user_id as frontUserId ,status as status ,class_role_type as classRoleType ,gtm_create as gtmCreate ,gtm_modified as gtmModified 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,class_id ,front_user_id ,status ,class_role_type ,gtm_create ,gtm_modified 		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.PhotoUserClassEntity" id="photoUserClassMap">
		        <result property="id" column="id"/>
		        <result property="classId" column="class_id"/>
		        <result property="frontUserId" column="front_user_id"/>
		        <result property="status" column="status"/>
		        <result property="classRoleType" column="class_role_type"/>
		        <result property="gtmCreate" column="gtm_create"/>
		        <result property="gtmModified" column="gtm_modified"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.PhotoUserClassEntity">
		select <include refid="allColumns"></include> from photo_user_class where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.PhotoUserClassEntity">
		select <include refid="allColumns"></include> from photo_user_class
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from photo_user_class 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.PhotoUserClassEntity" useGeneratedKeys="true" keyProperty="id">
		insert into photo_user_class
		(
			`class_id`, 
			`front_user_id`, 
			`status`, 
			`class_role_type`, 
			`gtm_create`, 
			`gtm_modified`
		)
		values
		(
			#{classId}, 
			#{frontUserId}, 
			#{status}, 
			#{classRoleType}, 
			#{gtmCreate}, 
			#{gtmModified}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.PhotoUserClassEntity">
		update photo_user_class 
		<set>
			<if test="classId != null">`class_id` = #{classId}, </if>
			<if test="frontUserId != null">`front_user_id` = #{frontUserId}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="classRoleType != null">`class_role_type` = #{classRoleType}, </if>
			<if test="gtmCreate != null">`gtm_create` = #{gtmCreate}, </if>
			<if test="gtmModified != null">`gtm_modified` = #{gtmModified}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from photo_user_class where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from photo_user_class where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>