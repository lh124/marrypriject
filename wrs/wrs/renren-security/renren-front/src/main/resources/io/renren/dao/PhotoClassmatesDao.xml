<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.PhotoClassmatesDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,user_id as userId ,user_get_id as userGetId ,class_id as classId ,contents as contents ,gmt_create as gmtCreate ,gmt_modified as gmtModified 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,user_id ,user_get_id ,class_id ,contents ,gmt_create ,gmt_modified 		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.PhotoClassmatesEntity" id="photoClassmatesMap">
		        <result property="id" column="id"/>
		        <result property="userId" column="user_id"/>
		        <result property="userGetId" column="user_get_id"/>
		        <result property="classId" column="class_id"/>
		        <result property="contents" column="contents"/>
		        <result property="gmtCreate" column="gmt_create"/>
		        <result property="gmtModified" column="gmt_modified"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.PhotoClassmatesEntity">
		select <include refid="allColumns"></include> from photo_classmates where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.PhotoClassmatesEntity">
		SELECT pc.id,pc.gmt_create,pc.contents,pfu.head_img,pfu.nickname 
		FROM photo_classmates pc LEFT JOIN photo_front_user pfu ON pc.user_id = pfu.id 
		where user_get_id = #{userId} and class_id= #{classId} 
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from photo_classmates 
		where user_get_id = #{userId} and class_id= #{classId} 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.PhotoClassmatesEntity" useGeneratedKeys="true" keyProperty="id">
		insert into photo_classmates
		(
			`user_id`, 
			`user_get_id`, 
			`class_id`, 
			`contents`, 
			`gmt_create`, 
			`gmt_modified`
		)
		values
		(
			#{userId}, 
			#{userGetId}, 
			#{classId}, 
			#{contents}, 
			#{gmtCreate}, 
			#{gmtModified}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.PhotoClassmatesEntity">
		update photo_classmates 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="userGetId != null">`user_get_id` = #{userGetId}, </if>
			<if test="classId != null">`class_id` = #{classId}, </if>
			<if test="contents != null">`contents` = #{contents}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from photo_classmates where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from photo_classmates where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>