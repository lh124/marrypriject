<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.smart.PhotoExaminationDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,name as name ,gmt_modified as gmtModified ,gmt_create as gmtCreate ,class_id as classId 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,name ,gmt_modified ,gmt_create ,class_id 		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.smart.PhotoExaminationEntity" id="photoExaminationMap">
		        <result property="id" column="id"/>
		        <result property="name" column="name"/>
		        <result property="gmtModified" column="gmt_modified"/>
		        <result property="gmtCreate" column="gmt_create"/>
		        <result property="classId" column="class_id"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.smart.PhotoExaminationEntity">
		select <include refid="allColumns"></include> from photo_examination where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.smart.PhotoExaminationEntity">
		select <include refid="allColumns"></include> from photo_examination 
		<if test="classId != null">
			where class_id = #{classId} 
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from photo_examination 
		<if test="classId != null">
			where class_id = #{classId} 
		</if>
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.smart.PhotoExaminationEntity" useGeneratedKeys="true" keyProperty="id">
		insert into photo_examination
		(
			`name`, 
			`gmt_modified`, 
			`gmt_create`, 
			`class_id`
		)
		values
		(
			#{name}, 
			#{gmtModified}, 
			#{gmtCreate}, 
			#{classId}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.smart.PhotoExaminationEntity">
		update photo_examination 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="gmtModified != null">`gmt_modified` = #{gmtModified}, </if>
			<if test="gmtCreate != null">`gmt_create` = #{gmtCreate}, </if>
			<if test="classId != null">`class_id` = #{classId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from photo_examination where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from photo_examination where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>