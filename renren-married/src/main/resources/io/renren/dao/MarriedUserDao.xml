<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.married.MarriedUserDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,nickname as nickname ,pic as pic ,createTime as createtime ,openId as openid 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,nickname ,pic ,createTime ,openId 		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.married.MarriedUserEntity" id="marriedUserMap">
		        <result property="id" column="id"/>
		        <result property="nickname" column="nickname"/>
		        <result property="pic" column="pic"/>
		        <result property="createtime" column="createTime"/>
		        <result property="openid" column="openId"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.married.MarriedUserEntity">
		select <include refid="allColumns"></include> from married_user where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.married.MarriedUserEntity">
		select <include refid="allColumns"></include> from married_user
		<if test="openId != null">
			where openId = #{openId}
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryListtongji" resultType="io.renren.entity.married.MarriedUserEntity">
		select t2.* from marry_sign t1,married_user t2 where t2.id = t1.userId and t1.weddingId=#{weddingId}
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from married_user 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.married.MarriedUserEntity" useGeneratedKeys="true" keyProperty="id">
		insert into married_user
		(
			`nickname`, 
			`pic`, 
			`createTime`, 
			`openId`
		)
		values
		(
			#{nickname}, 
			#{pic}, 
			#{createtime}, 
			#{openid}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.married.MarriedUserEntity">
		update married_user 
		<set>
			<if test="nickname != null">`nickname` = #{nickname}, </if>
			<if test="pic != null">`pic` = #{pic}, </if>
			<if test="createtime != null">`createTime` = #{createtime}, </if>
			<if test="openid != null">`openId` = #{openid}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from married_user where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from married_user where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>