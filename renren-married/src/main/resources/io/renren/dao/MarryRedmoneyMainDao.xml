<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.married.MarryRedmoneyMainDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,total_fee as totalFee ,total_num as totalNum ,user_id as userId ,
		gmt_modifiedtime as gmtModifiedtime,out_trade_no as outTradeNo,states as states 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,total_fee ,total_num ,user_id ,gmt_modifiedtime,out_trade_no,states 		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.married.MarryRedmoneyMainEntity" id="marryRedmoneyMainMap">
		        <result property="id" column="id"/>
		        <result property="totalFee" column="total_fee"/>
		        <result property="totalNum" column="total_num"/>
		        <result property="userId" column="user_id"/>
		        <result property="states" column="states"/>
		        <result property="outTradeNo" column="out_trade_no"/>
		        <result property="gmtModifiedtime" column="gmt_modifiedtime"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.married.MarryRedmoneyMainEntity">
		select <include refid="allColumns"></include> from marry_redmoney_main where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.married.MarryRedmoneyMainEntity">
		select <include refid="allColumns"></include> from marry_redmoney_main
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from marry_redmoney_main 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.married.MarryRedmoneyMainEntity" useGeneratedKeys="true" keyProperty="id">
		insert into marry_redmoney_main
		(
			`total_fee`, 
			`total_num`, 
			`user_id`, 
			`out_trade_no`, 
			`states`, 
			`gmt_modifiedtime`
		)
		values
		(
			#{totalFee}, 
			#{totalNum}, 
			#{userId}, 
			#{outTradeNo}, 
			#{states}, 
			#{gmtModifiedtime}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.married.MarryRedmoneyMainEntity">
		update marry_redmoney_main 
		<set>
			<if test="totalFee != null">`total_fee` = #{totalFee}, </if>
			<if test="totalNum != null">`total_num` = #{totalNum}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="outTradeNo != null">`out_trade_no` = #{outTradeNo}, </if>
			<if test="states != null">`states` = #{states}, </if>
			<if test="gmtModifiedtime != null">`gmt_modifiedtime` = #{gmtModifiedtime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from marry_redmoney_main where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from marry_redmoney_main where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>