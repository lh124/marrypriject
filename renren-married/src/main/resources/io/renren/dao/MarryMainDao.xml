<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.married.MarryMainDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,title as title ,author as author ,content as content ,pic as pic ,price as price,
		userId as userId,cartId as cartId,username as username		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,title ,author ,content ,pic ,price,userId,username,	cartId	
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.married.MarryMainEntity" id="marryMainMap">
		        <result property="id" column="id"/>
		        <result property="title" column="title"/>
		        <result property="author" column="author"/>
		        <result property="content" column="content"/>
		        <result property="price" column="price"/>
		        <result property="userId" column="userId"/>
		        <result property="pic" column="pic"/>
		        <result property="cartId" column="cartId"/>
		        <result property="username" column="username"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.married.MarryMainEntity">
		select t1.id,t1.title,t1.author,t1.content,t1.pic,t1.price,t1.userId,t2.username from 
		marry_main t1,sys_user t2 where t1.userId=t2.user_id and t1.id = #{value}
	</select>
	
	<select id="queryListtongji" resultType="io.renren.entity.married.MarryMainEntity">
		select t4.*,t3.username from sys_user t3,(
			select t2.id,t2.title,t2.author,t2.content,t2.pic,t2.price,t2.userId,t1.id as cartId from marry_cart t1,marry_main t2 where t1.main_id=t2.id 
			and t1.states=1 and t1.userId=#{userId}
			<if test="Id != null and Id != ''">
				and t1.id=#{Id}
		    </if>
			)t4 where t3.user_id=t4.userId and t3.user_id=#{user_id}
	</select>

	<select id="queryList" resultType="io.renren.entity.married.MarryMainEntity">
		select <include refid="allColumns"></include> from marry_main
		<if test="userId != null and userId != null">
			where userId=#{userId}
		</if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from marry_main 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.married.MarryMainEntity" useGeneratedKeys="true" keyProperty="id">
		insert into marry_main
		(
			`title`, 
			`author`, 
			`content`, 
			`price`, 
			`userId`, 
			`pic`
		)
		values
		(
			#{title}, 
			#{author}, 
			#{content}, 
			#{price}, 
			#{userId}, 
			#{pic}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.married.MarryMainEntity">
		update marry_main 
		<set>
			<if test="title != null">`title` = #{title}, </if>
			<if test="author != null">`author` = #{author}, </if>
			<if test="content != null">`content` = #{content}, </if>
			<if test="price != null">`price` = #{price}, </if>
			<if test="userId != null">`userId` = #{userId}, </if>
			<if test="pic != null">`pic` = #{pic}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from marry_main where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from marry_main where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>