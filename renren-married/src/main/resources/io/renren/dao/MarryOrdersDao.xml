<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.married.MarryOrdersDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,order_number as orderNumber ,order_type as orderType,main_describe as mainDescribe,business as business ,main_price as mainPrice ,gmt_modifiedtime as gmtModifiedtime ,states as states ,user_id as userId ,content as content 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,order_number ,business ,main_price,order_type  ,gmt_modifiedtime ,states ,user_id ,content,main_describe 		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.married.MarryOrdersEntity" id="marryOrdersMap">
		        <result property="id" column="id"/>
		        <result property="orderNumber" column="order_number"/>
		        <result property="business" column="business"/>
		        <result property="mainPrice" column="main_price"/>
		        <result property="gmtModifiedtime" column="gmt_modifiedtime"/>
		        <result property="states" column="states"/>
		        <result property="userId" column="user_id"/>
		        <result property="mainDescribe" column="main_describe"/>
		        <result property="content" column="content"/>
		        <result property="orderType" column="order_type"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.married.MarryOrdersEntity">
		select <include refid="allColumns"></include> from marry_orders where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.married.MarryOrdersEntity">
		select <include refid="allColumns"></include> from marry_orders where user_id=#{userId}
		<if test="states != null and states != ''">
			and states=#{states}
		</if>
        order by id desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from marry_orders 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.married.MarryOrdersEntity" useGeneratedKeys="true" keyProperty="id">
		insert into marry_orders
		(
			`order_number`, 
			`business`, 
			`main_price`, 
			`gmt_modifiedtime`, 
			`states`, 
			`user_id`, 
			`order_type`, 
			`content`
		)
		values
		(
			#{orderNumber}, 
			#{business}, 
			#{mainPrice}, 
			#{gmtModifiedtime}, 
			#{states}, 
			#{userId}, 
			#{orderType}, 
			#{content}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.married.MarryOrdersEntity">
		update marry_orders 
		<set>
			<if test="orderNumber != null">`order_number` = #{orderNumber}, </if>
			<if test="business != null">`business` = #{business}, </if>
			<if test="mainPrice != null">`main_price` = #{mainPrice}, </if>
			<if test="gmtModifiedtime != null">`gmt_modifiedtime` = #{gmtModifiedtime}, </if>
			<if test="states != null">`states` = #{states}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="content != null">`content` = #{content}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from marry_orders where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from marry_orders where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>