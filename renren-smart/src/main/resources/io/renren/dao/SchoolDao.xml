<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.smart.SchoolDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,school_name as schoolName ,pw as pw , city_id as cityId 
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,school_name ,pw , city_id 
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.smart.SchoolEntity" id="schoolMap">
		        <result property="id" column="id"/>
		        <result property="schoolName" column="school_name"/>
		        <result property="pw" column="pw"/>
	    </resultMap>  

	<select id="queryObject" resultType="io.renren.entity.smart.SchoolEntity">
		select <include refid="allColumns"></include> from school where id = #{value}
	</select>
	
	<select id="queryObjectName" resultType="io.renren.entity.smart.SchoolEntity">
		select <include refid="allColumns"></include> from school where school_name = #{schoolName}
	</select>



	<select id="queryList" resultType="io.renren.entity.smart.SchoolEntity">
		select top ${limit} <include refid="allColumns"></include>
		from school
		where id not in
		(
		 select top ${begin} id from school  <if test="cityId != null">where city_id = #{cityId} </if>
		 	<choose>
		            <when test="sidx != null and sidx.trim() != ''">
		                order by ${sidx} ${order}
		            </when>
					<otherwise>
		                order by id desc
					</otherwise>
		     </choose>
		) <if test="cityId != null">and city_id = #{cityId} </if>
		<choose>
		         <when test="sidx != null and sidx.trim() != ''">
		             order by ${sidx} ${order}
		         </when>
				<otherwise>
				             order by id desc
				</otherwise>
		</choose>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from school 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.smart.SchoolEntity">
		insert into school
		(
			school_name, 
			pw,
			city_id
		)
		values
		(
			#{schoolName}, 
			#{pw},
			#{cityId}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.smart.SchoolEntity">
		update school 
		<set>
			<if test="schoolName != null">school_name = #{schoolName}, </if>
			<if test="pw != null">pw = #{pw},</if>
			<if test="pw != null">city_id = #{cityId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from school where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from school where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>