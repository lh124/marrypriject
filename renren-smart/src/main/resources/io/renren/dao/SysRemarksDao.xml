<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.dao.smart.SysRemarksDao">

	<!-- 可根据自己需要-->
	<sql id="allColumnsAlias">
		id as id ,name as name ,createTime as createtime,solveIf as solveIf,userId as userId 		
	</sql>
	<!-- 可根据自己需要-->
	<sql id="allColumns">
		id ,name ,createTime ,solveIf,userId		
	</sql>
	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.entity.smart.SysRemarksEntity" id="sysRemarksMap">
		        <result property="id" column="id"/>
		        <result property="name" column="name"/>
		        <result property="solveIf" column="solveIf"/>
		        <result property="userId" column="userId"/>
		        <result property="createtime" column="createTime"/>
	    </resultMap>

	<select id="queryObject" resultType="io.renren.entity.smart.SysRemarksEntity">
		select <include refid="allColumns"></include> from sys_remarks where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.entity.smart.SysRemarksEntity">
		select <include refid="allColumns"></include> from sys_remarks where userId=#{userId}
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sys_remarks 
	</select>
	 
	<insert id="save" parameterType="io.renren.entity.smart.SysRemarksEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sys_remarks
		(
			`name`, 
			`userId`, 
			`solveIf`, 
			`createTime`
		)
		values
		(
			#{name}, 
			#{userId},
			#{solveIf},
			#{createtime}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.entity.smart.SysRemarksEntity">
		update sys_remarks 
		<set>
			<if test="name != null">`name` = #{name}, </if>
			<if test="solveIf != null">`solveIf` = #{solveIf}, </if>
			<if test="createtime != null">`createTime` = #{createtime}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sys_remarks where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sys_remarks where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>